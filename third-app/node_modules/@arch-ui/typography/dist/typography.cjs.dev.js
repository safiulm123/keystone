'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var _objectSpread = _interopDefault(require("@babel/runtime/helpers/objectSpread"));

var _extends = _interopDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties = _interopDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var core = require('@emotion/core');

var styled = _interopDefault(require('@emotion/styled'));

require('react');

var theme = require('@arch-ui/theme');

const truncate = {
  minWidth: 0,
  overflow: 'hidden',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap'
};
const SubtleText = styled.span({
  color: theme.colors.N60
});
const H1 = styled.h1({
  fontSize: 28,
  fontWeight: 300,
  margin: '24px 0'
});
const PageTitle = styled.h1({
  fontSize: '2.4rem',
  fontWeight: 900,
  marginBottom: '0.5em',
  marginTop: '1.0rem'
});

const Truncate = _ref => {
  let Tag = _ref.as,
      props = _objectWithoutProperties(_ref, ["as"]);

  return core.jsx(Tag, _extends({
    css: truncate
  }, props));
};

Truncate.defaultProps = {
  as: 'div'
};

const Title = _ref2 => {
  let Tag = _ref2.as,
      crop = _ref2.crop,
      margin = _ref2.margin,
      props = _objectWithoutProperties(_ref2, ["as", "crop", "margin"]);

  const gutter = theme.gridSize * 3;
  const margins = {
    none: {
      margin: 0
    },
    both: {
      marginBottom: gutter,
      marginTop: gutter
    },
    bottom: {
      marginBottom: gutter,
      marginTop: 0
    },
    top: {
      marginBottom: 0,
      marginTop: gutter
    }
  };
  const offset = margins[margin];
  const cropStyles = crop ? truncate : null;
  return core.jsx(Tag, _extends({
    css: _objectSpread({
      fontSize: 18,
      fontWeight: 600,
      whiteSpace: 'nowrap'
    }, cropStyles, offset)
  }, props));
};

Title.defaultProps = {
  as: 'h3',
  crop: false,
  margin: 'none'
};
const Kbd = styled.kbd({
  backgroundColor: theme.colors.N05,
  border: "1px solid ".concat(theme.colors.N20),
  borderRadius: 3,
  boxShadow: '0 1px 1px rgba(0, 0, 0, 0.12), 0 2px 0 0 rgba(255, 255, 255, 0.7) inset',
  display: 'inline-block',
  fontFamily: 'Monaco, monospace',
  fontSize: '0.85em',
  fontWeight: 'bold',
  lineHeight: 'inherit',
  padding: '1px 5px',
  position: 'relative',
  top: '-1px',
  verticalAlign: 'middle',
  whiteSpace: 'nowrap'
});

const A11yText = _ref3 => {
  let Tag = _ref3.tag,
      props = _objectWithoutProperties(_ref3, ["tag"]);

  return core.jsx(Tag, _extends({
    css: {
      border: 0,
      clip: 'rect(1px, 1px, 1px, 1px)',
      height: 1,
      overflow: 'hidden',
      padding: 0,
      position: 'absolute',
      whiteSpace: 'nowrap',
      width: 1
    }
  }, props));
};

A11yText.defaultProps = {
  tag: 'span'
};
exports.SubtleText = SubtleText;
exports.H1 = H1;
exports.PageTitle = PageTitle;
exports.Truncate = Truncate;
exports.Title = Title;
exports.Kbd = Kbd;
exports.A11yText = A11yText;
